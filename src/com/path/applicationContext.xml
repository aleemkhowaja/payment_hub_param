<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="contextApplicationContextProvider"
		class="com.path.lib.common.util.ApplicationContextProvider">
	</bean>
	
	
	<!-- should be located after contextApplicationContextProvider -->
	<import	resource="classpath:com/path/conf/application_security.xml" />
	
	
	<!-- should be located after contextApplicationContextProvider -->
	<import resource="classpath:com/path/conf/**/*Context.xml" />

	<!-- for Web services Exposing -->
	<import resource="classpath:com/path/applicationWebServices.xml" />
	
	<!-- for BO Exposing -->
	<import resource="classpath:com/path/applicationBOExporters.xml" />
	

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:PathRemoting.properties</value>
				<value>classpath:PathServices.properties</value>
				<value>classpath:PathPayHubRemoting.properties</value>
			</list>
		</property>
	</bean>


   <bean class="com.path.lib.remote.PathBeanFactoryPostProcessor" >
		<property name="beanAvailability" value="${beanAvailability}" />
	</bean>
	
	<bean id="pathRemotingPropertiesProvider" class="com.path.lib.remote.PathRemotingPropertiesProvider" />

    <bean id="payhubServiceBeanFactory" class="com.path.lib.remote.PathServiceBeanFactory" />
    
	<bean id="pathBeanFactory" class="com.path.lib.remote.PathServiceBeanFactory" />

	<bean id="reportingServiceBeanFactory" class="com.path.lib.remote.PathBeanFactory">
		<property name="beanAvailability" value="${reporting.beanAvailability}" />
		<property name="serviceURL" value="${reporting.serviceURL}" />
	</bean>
	
	<bean id="gatewayServiceBeanFactory" class="com.path.lib.remote.PathServiceBeanFactory" />
	
	<!-- <bean id="gatewayServiceBeanFactory" class="com.path.lib.remote.PathBeanFactory">
		<property name="beanAvailability" value="${atmp.beanAvailability}" />
		<property name="serviceURL" value="${atmp.serviceURL}" />
	</bean> -->
	
	<bean id="jeDataSource"	class="org.springframework.jndi.JndiObjectFactoryBean">
		<!-- <property name="jndiName" value="${services.atmp.jndi}" /> -->
		<property name="jndiName" value="${services.payh.jndi}" />
	</bean>

	<bean id="jeTransactionManager"	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jeDataSource" />
	</bean>


	<bean id="baseBO" abstract="true">
		<property name="genericDAO" ref="genericDAO"></property>
		<property name="commonLibBO" ref="commonLibBO"></property>
		<property name="auditBO" ref="auditBO"></property>
		<property name="smartBO" ref="smartBO"></property>
	</bean>

	<bean id="genericDAO" parent="baseDAO"
		class="com.path.lib.common.base.GenericDAOImpl">
	</bean>

	<bean id="baseDAO" abstract="true">
		<property name="sqlMap" ref="sqlMapClient" />
		<property name="datasourceJNDI" value="${services.jndi}" />
	</bean>

	<bean id="sqlSessionFactProps"
		class="com.path.lib.common.base.ibatis3.SqlSessionFactProps">
		<property name="configLocation"
			value="classpath:com/path/conf/sql-mapper-config.xml"></property>
		<property name="mapperLocations">
			<list>
				<value>${services.commonMappers}</value>
			</list>
		</property>
		<property name="failFast" value="true"></property>
		<property name="sybaseMappers"
			value="${services.sybaseMappers}"></property>
		<property name="oraMappers" value="${services.oraMappers}"></property>
		<property name="mapEnc" value="${mappersServices.encrypted}"></property>
	</bean>
	<bean id="sqlMapClientIbatisInst"
		class="com.path.lib.common.base.ibatis3.SqlSessionFactoryBean"
		scope="prototype">
	</bean>

	<bean id="sqlMapClientIbatis"
		class="com.path.lib.common.base.ibatis3.SqlSessionFactoryBean">
		<constructor-arg>
			<map>
				<entry key="sqlSessionFactProps"
					value-ref="sqlSessionFactProps"></entry>
				<entry key="dataSource" value-ref="jeDataSource"></entry>
			</map>
		</constructor-arg>		
	</bean>


	<bean id="sqlMapClient"
		class="com.path.lib.common.base.IbatisSqlMapClient">
		<property name="sqlMapClient" ref="sqlMapClientIbatis" />
	</bean>

	<bean id="jeMatchAllTxInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager"
			ref="jeTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*NewTrans">PROPAGATION_REQUIRES_NEW, -Exception
				</prop>
				<prop key="*">PROPAGATION_REQUIRED, -Exception</prop>
			</props>
		</property>
	</bean>

	<bean id="interceptorTransaction"
		class="com.path.lib.common.interceptor.PathBeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<idref bean="jeMatchAllTxInterceptor" />
			</list>
		</property>
		<!-- Common transaction beans reference available in ServiceCommonContext, 
			this property should be located before bean Names -->
		<property name="addBeanNames" ref="commmonTransBeans" />
		<property name="beanNames">
			<list>
				<value>commonPwsMappingBO</value>
				<value>atmImportExportBO</value>
			</list>
		</property>
	</bean>

	<bean name="timeoutInterceptor"
		class="com.path.lib.common.interceptor.TimeoutInterceptor">
		<property name="timeoutProps">
			<props><!-- Timeout parameters for method to be given here -->
				<prop key=""></prop><!-- milliseconds(mi), seconds(s), hours(h), days(d), 
					microseconds(mic), minutes(m) -->
			</props>
		</property>
	</bean>

	<bean name="timeoutAdvisor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="timeoutInterceptor" />
		<property name="mappedNames">
			<list>
				<value></value><!-- Method name for timeout to be given here -->
			</list>
		</property>
	</bean>

	<bean name="timeoutMapper"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<idref bean="timeoutAdvisor" />
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value></value><!-- The bean in which the method to be timed out lies, 
					is to be given here -->
			</list>
		</property>
	</bean>


	<!-- Portal Commom -->

	<!-- this baseBO is just to be able to put parent in BOContext.xml common 
		file basically used to instantiate genericDAO inside BaseBO -->
	<!-- <bean id="baseBO" abstract="true" /> -->

	<bean id="baseAction" abstract="true" scope="prototype">
		<property name="baseServices" ref="baseServices"></property>
		<property name="auditBO" ref="auditBO"></property>
	</bean>

	<bean id="retailBaseAction" abstract="true" scope="prototype" parent="baseAction">
		<property name="memoBO" ref="memoBO"></property>
	</bean>

	<bean id="baseServices" class="com.path.lib.common.base.BaseServicesImpl">
		<property name="commonLibBO" ref="commonLibBO"></property>
		<property name="verbose" value="true"></property>
	</bean>

</beans>
